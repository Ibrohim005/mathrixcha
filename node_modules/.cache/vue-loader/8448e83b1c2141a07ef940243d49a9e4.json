{"remainingRequest":"D:\\activus\\matrix\\mathrix\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activus\\matrix\\mathrix\\src\\components\\Checkbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activus\\matrix\\mathrix\\src\\components\\Checkbox.vue","mtime":1631495468080},{"path":"D:\\activus\\matrix\\mathrix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631376661355},{"path":"D:\\activus\\matrix\\mathrix\\node_modules\\babel-loader\\lib\\index.js","mtime":1631376691047},{"path":"D:\\activus\\matrix\\mathrix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631376661355},{"path":"D:\\activus\\matrix\\mathrix\\node_modules\\vue-loader\\lib\\index.js","mtime":1631376692296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG1vZGVsOiB7DQogICAgcHJvcDogJ21vZGVsVmFsdWUnLA0KICAgIGV2ZW50OiAnY2hhbmdlJw0KICB9LA0KICBwcm9wczogew0KICAgICJ2YWx1ZSI6IHsgdHlwZTogU3RyaW5nIH0sDQogICAgIm1vZGVsVmFsdWUiOiB7IGRlZmF1bHQ6ICIiIH0sDQogICAgImxhYmVsIjogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfSwNCiAgICAidHJ1ZVZhbHVlIjogeyBkZWZhdWx0OiB0cnVlIH0sDQogICAgImZhbHNlVmFsdWUiOiB7IGRlZmF1bHQ6IGZhbHNlIH0NCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBpc0NoZWNrZWQoKSB7DQogICAgICBpZiAodGhpcy5tb2RlbFZhbHVlIGluc3RhbmNlb2YgQXJyYXkpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMubW9kZWxWYWx1ZS5pbmNsdWRlcyh0aGlzLnZhbHVlKQ0KICAgICAgfQ0KICAgICAgLy8gTm90ZSB0aGF0IGB0cnVlLXZhbHVlYCBhbmQgYGZhbHNlLXZhbHVlYCBhcmUgY2FtZWxDYXNlIGluIHRoZSBKUw0KICAgICAgcmV0dXJuIHRoaXMubW9kZWxWYWx1ZSA9PT0gdGhpcy50cnVlVmFsdWUNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICB1cGRhdGVJbnB1dChldmVudCkgew0KICAgICAgbGV0IGlzQ2hlY2tlZCA9IGV2ZW50LnRhcmdldC5jaGVja2VkDQogICAgICBpZiAodGhpcy5tb2RlbFZhbHVlIGluc3RhbmNlb2YgQXJyYXkpIHsNCiAgICAgICAgbGV0IG5ld1ZhbHVlID0gWy4uLnRoaXMubW9kZWxWYWx1ZV0NCiAgICAgICAgaWYgKGlzQ2hlY2tlZCkgew0KICAgICAgICAgIG5ld1ZhbHVlLnB1c2godGhpcy52YWx1ZSkNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICBuZXdWYWx1ZS5zcGxpY2UobmV3VmFsdWUuaW5kZXhPZih0aGlzLnZhbHVlKSwgMSkNCiAgICAgICAgfQ0KICAgICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCBuZXdWYWx1ZSkNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIGlzQ2hlY2tlZCA/IHRoaXMudHJ1ZVZhbHVlIDogdGhpcy5mYWxzZVZhbHVlKQ0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["Checkbox.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Checkbox.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <label class=\"wrapper flex items-center\">\r\n    {{label}}\r\n    <input class=\"checkbox\" type=\"checkbox\" :checked=\"isChecked\" :value=\"value\" @change=\"updateInput\"/>\r\n    <span class=\"checkmark\"></span>\r\n  </label>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  model: {\r\n    prop: 'modelValue',\r\n    event: 'change'\r\n  },\r\n  props: {\r\n    \"value\": { type: String },\r\n    \"modelValue\": { default: \"\" },\r\n    \"label\": { type: String, required: true},\r\n    \"trueValue\": { default: true },\r\n    \"falseValue\": { default: false }\r\n  },\r\n  computed: {\r\n    isChecked() {\r\n      if (this.modelValue instanceof Array) {\r\n        return this.modelValue.includes(this.value)\r\n      }\r\n      // Note that `true-value` and `false-value` are camelCase in the JS\r\n      return this.modelValue === this.trueValue\r\n    }\r\n  },\r\n  methods: {\r\n    updateInput(event) {\r\n      let isChecked = event.target.checked\r\n      if (this.modelValue instanceof Array) {\r\n        let newValue = [...this.modelValue]\r\n        if (isChecked) {\r\n          newValue.push(this.value)\r\n        } else {\r\n          newValue.splice(newValue.indexOf(this.value), 1)\r\n        }\r\n        this.$emit('change', newValue)\r\n      } else {\r\n        this.$emit('change', isChecked ? this.trueValue : this.falseValue)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"postcss\" scoped>\r\n/* Customize the label (the wrapper) */\r\n.wrapper {\r\n  display: block;\r\n  position: relative;\r\n  padding-left: 35px;\r\n  margin-bottom: 6px;\r\n  cursor: pointer;\r\n  font-size: 22px;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  font-size: 16px;\r\n}\r\n/* Hide the browser's default checkbox */\r\n.wrapper input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n}\r\n/* Create a custom checkbox */\r\n.checkmark {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 21px;\r\n  width: 21px;\r\n  border-radius: 2px;\r\n  background-color: #eee;\r\n  border: 1px solid #ccc;\r\n}\r\n/* On mouse-over, add a grey background color */\r\n.wrapper:hover input ~ .checkmark {\r\n  background-color: #ccc;\r\n}\r\n/* When the checkbox is checked, add a blue background */\r\n.wrapper input:checked ~ .checkmark {\r\n  background-color: #1CD4A7;\r\n}\r\n/* Create the checkmark/indicator (hidden when not checked) */\r\n.checkmark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n/* Show the checkmark when checked */\r\n.wrapper input:checked ~ .checkmark:after {\r\n  display: block;\r\n}\r\n/* Style the checkmark/indicator */\r\n.wrapper .checkmark:after {\r\n  left: 7px;\r\n  top: 0px;\r\n  width: 7px;\r\n  height: 15px;\r\n  border: solid white;\r\n  border-width: 0 3px 3px 0;\r\n  -webkit-transform: rotate(45deg);\r\n  -ms-transform: rotate(45deg);\r\n  transform: rotate(45deg);\r\n}\r\n</style>"]}]}