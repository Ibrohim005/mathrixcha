{"remainingRequest":"D:\\activus\\matrix\\mathrix\\node_modules\\babel-loader\\lib\\index.js!D:\\activus\\matrix\\mathrix\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activus\\matrix\\mathrix\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activus\\matrix\\mathrix\\src\\components\\Checkbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activus\\matrix\\mathrix\\src\\components\\Checkbox.vue","mtime":1631495468080},{"path":"D:\\activus\\matrix\\mathrix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631376661355},{"path":"D:\\activus\\matrix\\mathrix\\node_modules\\babel-loader\\lib\\index.js","mtime":1631376691047},{"path":"D:\\activus\\matrix\\mathrix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631376661355},{"path":"D:\\activus\\matrix\\mathrix\\node_modules\\vue-loader\\lib\\index.js","mtime":1631376692296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJEOi9hY3RpdnVzL21hdHJpeC9tYXRocml4L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG1vZGVsOiB7CiAgICBwcm9wOiAnbW9kZWxWYWx1ZScsCiAgICBldmVudDogJ2NoYW5nZScKICB9LAogIHByb3BzOiB7CiAgICAidmFsdWUiOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgICJtb2RlbFZhbHVlIjogewogICAgICBkZWZhdWx0OiAiIgogICAgfSwKICAgICJsYWJlbCI6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgICJ0cnVlVmFsdWUiOiB7CiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICAiZmFsc2VWYWx1ZSI6IHsKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc0NoZWNrZWQ6IGZ1bmN0aW9uIGlzQ2hlY2tlZCgpIHsKICAgICAgaWYgKHRoaXMubW9kZWxWYWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgICAgcmV0dXJuIHRoaXMubW9kZWxWYWx1ZS5pbmNsdWRlcyh0aGlzLnZhbHVlKTsKICAgICAgfSAvLyBOb3RlIHRoYXQgYHRydWUtdmFsdWVgIGFuZCBgZmFsc2UtdmFsdWVgIGFyZSBjYW1lbENhc2UgaW4gdGhlIEpTCgoKICAgICAgcmV0dXJuIHRoaXMubW9kZWxWYWx1ZSA9PT0gdGhpcy50cnVlVmFsdWU7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVJbnB1dDogZnVuY3Rpb24gdXBkYXRlSW5wdXQoZXZlbnQpIHsKICAgICAgdmFyIGlzQ2hlY2tlZCA9IGV2ZW50LnRhcmdldC5jaGVja2VkOwoKICAgICAgaWYgKHRoaXMubW9kZWxWYWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgICAgdmFyIG5ld1ZhbHVlID0gX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMubW9kZWxWYWx1ZSk7CgogICAgICAgIGlmIChpc0NoZWNrZWQpIHsKICAgICAgICAgIG5ld1ZhbHVlLnB1c2godGhpcy52YWx1ZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIG5ld1ZhbHVlLnNwbGljZShuZXdWYWx1ZS5pbmRleE9mKHRoaXMudmFsdWUpLCAxKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIG5ld1ZhbHVlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCBpc0NoZWNrZWQgPyB0aGlzLnRydWVWYWx1ZSA6IHRoaXMuZmFsc2VWYWx1ZSk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["Checkbox.vue"],"names":[],"mappings":";;;;;;;;;;;;AASA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,YADA;AAEA,IAAA,KAAA,EAAA;AAFA,GADA;AAKA,EAAA,KAAA,EAAA;AACA,aAAA;AAAA,MAAA,IAAA,EAAA;AAAA,KADA;AAEA,kBAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAFA;AAGA,aAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KAHA;AAIA,iBAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAJA;AAKA,kBAAA;AAAA,MAAA,OAAA,EAAA;AAAA;AALA,GALA;AAYA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,KAAA,UAAA,YAAA,KAAA,EAAA;AACA,eAAA,KAAA,UAAA,CAAA,QAAA,CAAA,KAAA,KAAA,CAAA;AACA,OAHA,CAIA;;;AACA,aAAA,KAAA,UAAA,KAAA,KAAA,SAAA;AACA;AAPA,GAZA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA;AACA,UAAA,SAAA,GAAA,KAAA,CAAA,MAAA,CAAA,OAAA;;AACA,UAAA,KAAA,UAAA,YAAA,KAAA,EAAA;AACA,YAAA,QAAA,sBAAA,KAAA,UAAA,CAAA;;AACA,YAAA,SAAA,EAAA;AACA,UAAA,QAAA,CAAA,IAAA,CAAA,KAAA,KAAA;AACA,SAFA,MAEA;AACA,UAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,KAAA,KAAA,CAAA,EAAA,CAAA;AACA;;AACA,aAAA,KAAA,CAAA,QAAA,EAAA,QAAA;AACA,OARA,MAQA;AACA,aAAA,KAAA,CAAA,QAAA,EAAA,SAAA,GAAA,KAAA,SAAA,GAAA,KAAA,UAAA;AACA;AACA;AAdA;AArBA,CAAA","sourcesContent":["<template>\r\n  <label class=\"wrapper flex items-center\">\r\n    {{label}}\r\n    <input class=\"checkbox\" type=\"checkbox\" :checked=\"isChecked\" :value=\"value\" @change=\"updateInput\"/>\r\n    <span class=\"checkmark\"></span>\r\n  </label>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  model: {\r\n    prop: 'modelValue',\r\n    event: 'change'\r\n  },\r\n  props: {\r\n    \"value\": { type: String },\r\n    \"modelValue\": { default: \"\" },\r\n    \"label\": { type: String, required: true},\r\n    \"trueValue\": { default: true },\r\n    \"falseValue\": { default: false }\r\n  },\r\n  computed: {\r\n    isChecked() {\r\n      if (this.modelValue instanceof Array) {\r\n        return this.modelValue.includes(this.value)\r\n      }\r\n      // Note that `true-value` and `false-value` are camelCase in the JS\r\n      return this.modelValue === this.trueValue\r\n    }\r\n  },\r\n  methods: {\r\n    updateInput(event) {\r\n      let isChecked = event.target.checked\r\n      if (this.modelValue instanceof Array) {\r\n        let newValue = [...this.modelValue]\r\n        if (isChecked) {\r\n          newValue.push(this.value)\r\n        } else {\r\n          newValue.splice(newValue.indexOf(this.value), 1)\r\n        }\r\n        this.$emit('change', newValue)\r\n      } else {\r\n        this.$emit('change', isChecked ? this.trueValue : this.falseValue)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"postcss\" scoped>\r\n/* Customize the label (the wrapper) */\r\n.wrapper {\r\n  display: block;\r\n  position: relative;\r\n  padding-left: 35px;\r\n  margin-bottom: 6px;\r\n  cursor: pointer;\r\n  font-size: 22px;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  font-size: 16px;\r\n}\r\n/* Hide the browser's default checkbox */\r\n.wrapper input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n}\r\n/* Create a custom checkbox */\r\n.checkmark {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 21px;\r\n  width: 21px;\r\n  border-radius: 2px;\r\n  background-color: #eee;\r\n  border: 1px solid #ccc;\r\n}\r\n/* On mouse-over, add a grey background color */\r\n.wrapper:hover input ~ .checkmark {\r\n  background-color: #ccc;\r\n}\r\n/* When the checkbox is checked, add a blue background */\r\n.wrapper input:checked ~ .checkmark {\r\n  background-color: #1CD4A7;\r\n}\r\n/* Create the checkmark/indicator (hidden when not checked) */\r\n.checkmark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n/* Show the checkmark when checked */\r\n.wrapper input:checked ~ .checkmark:after {\r\n  display: block;\r\n}\r\n/* Style the checkmark/indicator */\r\n.wrapper .checkmark:after {\r\n  left: 7px;\r\n  top: 0px;\r\n  width: 7px;\r\n  height: 15px;\r\n  border: solid white;\r\n  border-width: 0 3px 3px 0;\r\n  -webkit-transform: rotate(45deg);\r\n  -ms-transform: rotate(45deg);\r\n  transform: rotate(45deg);\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}